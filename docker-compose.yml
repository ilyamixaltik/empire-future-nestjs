version: '3.8'services:  ### MongoDB ##############################################  mongodb:    image: mongo:latest    networks:      - mongodb    ports:      - '27017:27017'    volumes:      - ./containers/db/mongodb/mongo/:/data/db      - ./containers/db/mongodb/mongo_dumps/:/data/dumps    # chown 1000:1000 ./containers    # user: '1000:1000'  ### PostgreSQL ###########################################  postgres:    image: postgres:14.1-alpine    restart: always    environment:      - POSTGRES_USER=postgres      - POSTGRES_PASSWORD=postgres    ports:      - '5432:5432'    volumes:      - ./containers/db/postgresql/postgres/:/var/lib/postgresql/data      - ./containers/db/postgresql/init.sql:/docker-entrypoint-initdb.d/create_tables.sql  ### Redis ################################################  redis:    image: redis:6.2-alpine    restart: always    ports:      - '6379:6379'    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81    volumes:      - redis:/data  ### RabbitMQ #############################################  rabbitmq:    image: rabbitmq:3-management-alpine    ports:      - '5672:5672'      - '15672:15672'    volumes:      - ./containers/rabbitmq/data/:/var/lib/rabbitmq/      - ./containers/rabbitmq/log/:/var/log/rabbitmq    networks:      - rabbitmqnetworks:  mongodb:    driver: bridge  postgres:    driver: bridge  redis:    driver: bridge  rabbitmq:    driver: bridgevolumes:  redis:    driver: local